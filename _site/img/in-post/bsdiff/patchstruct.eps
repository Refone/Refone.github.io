%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 732.000000 272.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 732 272
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 732 272
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /c put
dup 34 /t put
dup 35 /r put
dup 36 /l put
dup 37 /space put
dup 38 /bracketleft put
dup 39 /zero put
dup 40 /bracketright put
dup 41 /one put
dup 42 /two put
dup 43 /d put
dup 44 /i put
dup 45 /uniFB00 put
dup 46 /e put
dup 47 /x put
dup 48 /a put
dup 49 /o put
dup 50 /g put
dup 51 /n put
dup 52 /p put
dup 53 /h put
dup 54 /fi put
dup 55 /w put
dup 56 /three put
dup 57 /four put
dup 58 /five put
dup 59 /six put
dup 60 /seven put
dup 61 /eight put
dup 62 /f put
dup 63 /nine put
dup 64 /b put
dup 65 /equal put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<







09000F0019000F0029000F0039000F0049000F0059000F0069000F0079000F0089000F0099000F00A9000F00B9000F00C9000F000D5DB8001710B80028D0B800282FBA002900150017111239B8001710B8002AD0B8002A2F00B800152FBA0025000A00032BB8002510BA0000001B00032BB8000010BA0018001B0000111239BA0029000A0025111239303125222E0235343E0233321E0215140E0201113335331E0133323E0235342E02232206072335013B22301D0D0C1D2F23222F1E0D0C1D2FFED88E021A51303955391C1C3A583D30501A025D1C2D3C1F203C2E1D1D2F3C1F1F3C2D1C01A8FD46F526272C4A603437654C2E262A42000001003600000183021300150031BA0015000000032BB8001510B80002D0B800022F00B800012FBA000E000800032BB8000E10BA00140008000E111239303113113335343E0233321617352623220E02072335368E0E2136270D1C0A110E1B322C220A020205FDFBE9233C2D1A03028405101D291860000000010006FFFB015202A000190053BA0001000200032BB8000110B8000210B80006D0B8000110B80016D000B800012FBA0013000C00032BB8001310BA0004000500032BB8000410B80000D0B8000C10B8000FD0B8000F2FB8000510B80017D030311335231523153311141E0233323637350E0123222635113335EA8E56561A2D3B21152C120A160C24186802059B9B5FFECF27301A0902036E0202182401005F00010006000003280205000F003500B800012FB800052FB800092FB800002FB8000B2FBA000400000001111239BA000800000001111239BA000E000000011112393031211323032303230323032313331333130285A3925F02588A56025F96A49358025C0205FEA2015EFEA1015FFDFB015BFEA500010000000002190205000B002700B800072FB8000A2FB800012FB800042FBA000300010007111239BA0009000100071112393031130333371733033723072723BABA9F6C6CA2BFAA9D5A5BA20110FEF0A3A30113F28787000300000000022902CA0016001A001E0097BA0003000000032BB8000310BA001A001700032BB8001A10B8000310B80006D0B8000010B80013D0B8001A10B8001BD0B8001710B8001DD000B800012FB800182FBA0010000A00032BB8001010BA0014000000032BB8001410B8000010B80003D0B8001410B80005D0B8000A10B8000CD0B8000C2FB8001010B8000DD0B8000D2FB8001410B80017D0B8001010B8001CD0B8001BDC303113113311333523353436333217352E012322061D012315251133113D012315558E6262191D1B19122613575655019B8E8E01A6FE5A01A65F1F201B036A01035845285F5FFDFB0205507575000100000000027C02CA00290124B800142BB8002A2FB800002FB8002A10B80003D0B800032FB900020011F4B8000310

170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/seven 9 def
/eight 10 def
/nine 11 def
/equal 12 def
/bracketleft 13 def
/bracketright 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/f 20 def
/g 21 def
/h 22 def
/i 23 def
/l 24 def
/n 25 def
/o 26 def
/p 27 def
/r 28 def
/t 29 def
/w 30 def
/x 31 def
/fi 32 def
/uniFB00 33 def
/uni2B90 34 def
/uni2B91 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4174458 def
currentdict currentfile eexec


4133BFC7356E20BC7D238F3A174612A3A2E9328DDE3A57FA74307082A7CFA3ABF20786E02320EE9D2509C0AB3941D6FDCF1D0F9E38B2BBB11DA65B1F46D831F60E4B0800E9D91E0323AC403D57CEFB869C0100544BC77301C2E992EA2FD3EC65DAE72B5C2F0F7737ACA0D400738285C8C7AF71F559EC025295003DD2B37717C7CF0D1221C3AFA96BBA014ACF338A07300DE3916AAC0BF1D583E7F6E3D1D217FE68524AC3234A4931A93FF6F15066A2BB617E9328472268D70C256C21D7CA96B4EAA4AB645743ABB6BDCA7ADF6EA91623F52DDC125DA0F688E3D7D6547EB12BE1192A19478F28B62C62EBC9C44948CC786958FA78E66663FFCCA78D6FA816A4B9442DBF2436BDECAA08FABF4B962BB09939825AAC8CE1749426F599E42AEF0431BD5EB2ED407B7E6D203F7234D63BC49B6C208AB07912FC91716A0D76781052B41B4F7A2C1A9EEBAC2BC08546AF3A83AC7C98CE4FE96FE0197808B3C3BC56D6AE4DE4FD0D56510247A7ADEE7D6A84C645BCDA4C8BF4946AC0780ABA270371198941FDD44ED87C4CF734731E39801506E1653B551AEA66573517A30873C2EADE544BF4DA2C8B37BFEEAD6507FFC20FE8E0426FDA7CE982D257A7A246E3408E8C8AA20C685C02870D6C19DC3FEC7920E4ABCF60087086254FD61616AC8DD8C7C4017843DF171C735D86CDCE0260E5D32768BA8AF4BA45B79F27F7F5FBF936416C2E4DBA6FEBCC9996DF804C313D630441E768BE13392F0D866237A25A12C6430996CFC46E7F64E13E94B55700BDB9930EBFC808961F2B343EBC14CC959BC04C94C4297C2FEDCF86E7D737C87C3D5B731EB3608B20C687BF8B486174B109FAA509044BE8C4B71A073C8ABC16D9CDE172E36980E5DFF82F20DCE0866588A4ED262CD81E4BBB49D6007EB69D0FABCABC1FA473CB087D6B886F1538F605EFAA07628A8FE779C2A3364D222BE3B2E62141DBAE06AD7AC07BADDE4C7038F31354526C5F3451486E51C3F69970AD5B47731BFD4C68AC8D289A48007216A64B7AF933F9B62EDAFB2D30BD09CA7ABF1AD9F5290397A0548FBA8FE2B0F1DA8850C6E003AB85AB0359BF9461B97007AFF3820A12A6CF21D30E5120D5A89B08A3EF83C35D77C0DE9F84AB12F1542E7C1EE01D7E426E8D2B3F78E373B5BFFE09CE1F922D3831100DCD179D7957554A8812B289FBB0AE632A721C60BE8A5775F94E8FC0F2A1F12CEE95530608600812D1B1FB81DF81502DC625B42E75E2D69BD3B621B3A41C38EF72521850199F214DC1484B13BF69297554DC3E61531EE09535F67963FD631629820F9057E8F45EFE6EBC42FF4D66EB2148A4200D0C3BB25D739959808BAE125D0322DB91F5D54AB59C8B69B88625E6778EB874BDA97E6820DCA4D3296009DDB7F2AA16A07E9BCA343B2BD37B6116000B3E51A9AC88B4F4127836F6CE6DCC6FB351
61EC84551A60719E1CD50110DE7A3B851FEC7F596D3A71DDB30931829C06A60AB36F76B05154D3FF1DE8F68B4F1E1AFB7E17242C6CE72A6566B1136FE7B8300F145936FC8BE88C58F7972AB2E20C44B3F85FFA19E927E536BD2175EE0841255A927EDEB77725EA2A685E265C0B9CE8BD3AD7529631EABD67D306897519BCAF6187BD430BF9C5AE1F4DD9E3744597D0D5EFD7EFDA70DFB787D6561C22931737A7885447D39E31F7761612794CC454C060474A5B22A7E37C92C65421010BC910D650E6C268A731F5D273D331AD6577AA54FD2A808621E7DC3F263050A6811A968C7430D2BFC997A7B2FE46918959FEAA254CA5C03003173559F2F79B4735CAE99CF3A97EA9C648146EA94D10E9FECBD812C56FEAF222A2BC520E6D2CB73ACC487A77D8E24D648F18EF85B9C0C2FCD4D707E244CAC66CF13ED6165B6F83887310EAEE93047AF29B01DE59BBABA67B71255D0DC51D95CC2E85D645BDB76054762790CF421B54C822A518A9698AE3A31E105676EE6363FD82A744E09DC7F0699F5A81026E10786DF68DB07AAD5F18328ED12A6599879A4AB68064FA81354395495D4BC1D477C678B0C09C6D7D8EF179B7EF0563252E0DDEBFD255974878EF1BC7DF8F8B73F45D88815988E9437297DE93BCB5BA25840AF94D838B460C911E9FB5AAD14B86B6B7D33746DC8950884507AE3365FF23F14A615DC6ED33BC292F2E717B786BB6800CBFEC42E65C9759E457308BE29F5C9EB183D38A91C35658CB8424D8F3C50E0CDFB87256BF38A4308CB356D9444A50D67D0DE12A03DF5FC7A2853CF168FABEE2C2179DAC8CEAA069DEBF30A8DE9E8018C5D4028DCBC280AA1797961A87B210D445B1E33E400EB867792B5867F2DD93B9200F1652206A4E9BDDEFE7427E178835AAC06166C962664574C33F1935B88D88AB5EFFB7DF1D8E2D3A5F3B63E843F849EC52DAC0E28A8C10AF544B473F4AB8CA61EEBC1568A4B3D5BB62703E33D22E520302F0EE31E7EE07E2E7921EFF123146218ACA4D402BC606D106AA60C7C6950A4B6D3E2A9B1B141AB6A490FC5A5F4F7D599A01121F66C1378595CF3AE47E2AFAFA10F12C4352D3E82FF855F80F5DC163FA51AB8E2683EDD2833DBED571BBE4D44B760C79DB0A7808B7513B4A9CA41C22A3836E4A21B5899DF8342B2BF4375442D396E358A207E47291962939160B1C980B13BF0814C1A312E4A988672B1BA896205751EDCC8207A5581849C60445A89A5392C437B5EAA92A5BB8D5EBAB0C06AD8B37355BE5B2E2685CCD080E12906019776462D6837EF5827A2785B1E88685CCD63787A214EC817ECCECD08785FF92C2FC9663F5C6A79A9C2B4B2812AC4CC5A6F3FFD230B5EEBAAA24EBB67135C4AA867D3BEBF8F5C79AA8E031B30BDB85736DBA82825DBA4F8B0ACA7DEE81684DBE6865266CCE2AECA290E5C50FF2A2
7E75C574CB31AFFBAF3F8DA1C55F97DCA0A936E3A850E9E1580BA26F4186C4DD54FC849F24EF1A71C6C51DD251C97872755816417F8CC21692282EAC6E5C271629C0433FB84045C2368A56A07822849C5AA39130AB4A2161895299E9E6D2AA48B3B94B8946380B13A1C3CCFDFEA446AEA323D71CD99AC006F22A1A42E1A5A24F505280062D7DEDC46807D149CC0D1B548C237AA07120ABC4D75C718D31DD9A59A53B0189D01D041C02F80E9119B0BAAFDA1B8FADE1E34ADED6FB7C325AB0F3004C0110F6429EE8DBBFF96C98C6D5B4041CF556049A31DD6706A25050B518CCFB6945568B3D9E69494ACE7703DB3C53D832F145165E5F3365C92231E0F3299A81C02A20B9DE00CE2A92457D1D59D350431F15D010A16F2ECF38BB6285F7DD00FCCE4FF33827D58DBF378499DF72F6E1AF73FEF7E0724E2DDD2CA0F43AC1828FA353CF7B401640F5C6E7F8867946BBA29EEA5E46BFF141CAF27376B49CEC1B5801314DA37F07081BEF054C71630602874EC88877F6C742351A002CE9663E69BEFC2C349672263408F40A10B8F35DBBB7888EDAC50B1553BF8B6CE0B4336B6E2464972257F81D2CBFD2654902C1A416107F8AAAF81D8B981E57C03864DE6E72D7C856986A60017B4E326D79D0A62CDF8D117E7AAF4675197692F206865FEB7286B423B4FAB9F54D5E4AB0A4844A7DC703AF87326E78A8CC484D6EFD2F500AF756932CF6AC87A40AE0CCB35D1ACBDE1A23E33F3E1B9FC9921B7739716F9BCAA6408756A39F6D78AFC942A0BE9C54A80EC8A8CA847B51E0B7ECB639CBD72A040298B2FF47456C1571D7D489244F4181D90151327E0D24F639F06935A5CC898FCD7E1B0AE979E314F19D6BB760810AA7F814BCE1A4DF525ACF138C10F85783D7134369BE01D5E103A46564C52491CC276D28F8DED0771893140C4776DEF915E784A02D8B5CB9C69ADEB218758C6989918FCABD24F59DA5D3CEE4A3C3A4C5B85B0B2A8842A5C021CEE3F13F0B99F3F9943770BFF484FCF9F411FE6C219D80414CB08370B48D15DB601F554777254CF6CFE24E7BE655D167BB756FF286E511A02E8C6DE4828EA1F7FEB3AEEA12D71A0AE8D92123D67B447AFBB5D08A666E3C7EB5028C7B6D97294C2AE220CCAD96139C44A0CC407A892A32A5959DAAB9A54EAD3FC2BD6805973A8FB1188083CAF3F43884DB1EDC2C803A18E619D9C9CB170933985356AEECE5DDF453119D8AE47A0030F5375362886D1EDD864BFCFC452E8476A262DB30F3FAA5F11346D7D1559DE10F49AB06382BFAE12E2A47DF0A2A99BCC6399FDD20FE307381975B76A74D5BF467F9BB51A30448606B9BC928E6EB3320431048908D632D5B265BB95BD92AF9D21FC908CED79D0ABCE8E77778F269B27293A4C7C1902A3A54EE8BCD349EF9804472F5B44747F905039F01DFAA10F6AF75C9D6FF8D72

2C13D954B9735C5DB9903B638679FF9372F45B5356CE67054D651637D29D7031B14B5F04F27C1041469D54253FF97A01BB0F4CDDED335419BF3476E975CAFD16DC829FFA8BC22EDE695E626AAAF51C70683C7248704514A2232BC22FBDB647468728B30E74B59F2B47F33876AD6DF7F097E6FC7A0E6C6C3A4C888372D0A3EDBAAC2B0251B750903C6EB321E25D9F16D12C325B56EA56314FCBA13B07A82B3EE6DB2B925B6FEFC0DDB75BF8C874A107E622D8FD81FF32BD2C5DC290527C86DCF71A63AC568364009214FFCF19455D6CA5B5C8F7A712AB01D390501DF6CEB07DEB168EB35DD6020FD1B0A0FC2E1E9CD89AD2240B77AAEFB7840CFE54DF345F0571D6CB0E363A76AF15CFA44D9CFA7AC2C71D4FE34C8E10E8F89232B323C86CCE6874AD06A1A1F80DD08307B97D27A46C627D8A13424C8866BCAC9104AF88A28F8B7111B35E8AEFBB3E3391EB390D4D8440933E00374B0DBFD71C20569F492DD3D89A9AC079E393FA8F7A4DC64A1FBBB27C925646B8F660C8AB27C305BAC6D1808EFA96728BDD6DB94FC15C005479C99F5AD4C297CF59884551CF49E8A4212F07E07790C2F9756400C80A9F0D02483014EB5B4B056D67700CAB89286E676BE60F0799C457DAAEF797AB367112BCA2173483BFBED214ED24B989B5BA3B0796B75A52B505BB8BC787A333DFE94CAADCDBE615F8AE58FB1F23E160EC3CEAA32670733CF3F53F25DD9316E9987A4B93A0E21E25206E548B7ED98BC7861EC38EE42F061B81550910D9FBFCA53D8D7C95C825EF787358358BFB0FAE4B3733131E99F682
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.74901998 0.74901998 0.74901998 sc
q
0 0 732 272 rc
555 128 m
663.5 128 l
663.5 53 l
555 53 l
h
555 128 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
555 161 m
663.5 161 l
663.5 236 l
555 236 l
h
555 161 m
S
0 i
0.40784314 0.73725492 0.21176471 sc
CM
313.25 128 m
421.75 128 l
421.75 78 l
313.25 78 l
h
313.25 128 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
313.25 161 m
421.75 161 l
421.75 211 l
313.25 211 l
h
313.25 161 m
S
0 i
0.40784314 0.73725492 0.21176471 sc
CM
71.5 53 m
180 53 l
180 3 l
71.5 3 l
h
71.5 53 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
71.5 236 m
180 236 l
180 286 l
71.5 286 l
h
71.5 236 m
S
313.25 61 m
421.75 61 l
421.75 161 l
313.25 161 l
h
313.25 61 m
S
0 i
0.94901961 0.3764706 0.46666667 sc
CM
71.5 228 m
180 228 l
180 203 l
71.5 203 l
h
71.5 228 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
71.5 61 m
180 61 l
180 86 l
71.5 86 l
h
71.5 61 m
S
0 i
0.94901961 0.3764706 0.46666667 sc
CM
71.5 203 m
180 203 l
180 178 l
71.5 178 l
h
71.5 203 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
71.5 86 m
180 86 l
180 111 l
71.5 111 l
h
71.5 86 m
S
0 i
0.94901961 0.3764706 0.46666667 sc
CM
71.5 178 m
180 178 l
180 153 l
71.5 153 l
h
71.5 178 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 289 cm
71.5 111 m
180 111 l
180 136 l
71.5 136 l
h
71.5 111 m
S
1 w
71.5 136 m
180 136 l
180 161 l
71.5 161 l
h
71.5 136 m
S
71.5 161 m
180 161 l
180 186 l
71.5 186 l
h
71.5 161 m
S
71.5 186 m
180 186 l
180 211 l
71.5 211 l
h
71.5 186 m
S
71.5 211 m
180 211 l
180 236 l
71.5 236 l
h
71.5 211 m
S
3 w
71.5 136 m
180 136 l
180 236 l
71.5 236 l
h
71.5 136 m
S
1 w
71.5 236 m
180 236 l
180 261 l
71.5 261 l
h
71.5 236 m
S
71.5 261 m
180 261 l
180 286 l
71.5 286 l
h
71.5 261 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 30 218 cm
/F1.1[ 16 0 0 -16 0 0]sf
-24.584 6.2679443 m
(!"#$%&'\()[ 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 0 0 -1 30 193 cm
-24.584 6.2679443 m
(!"#$%&\)\()[ 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 0 0 -1 30 168 cm
-24.584 6.2679443 m
(!"#$%&*\()[ 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 0 0 -1 30 103 cm
-12.04 6.2679443 m
(+,-)[ 9.776000 4.128000 0.000000 ] xS
1 0 0 -1 30 28 cm
-19.408001 6.2679443 m
(./"#0)[ 9.184000 8.592000 5.632000 6.224000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
313.25 61 m
421.75 61 l
421.75 86 l
313.25 86 l
h
313.25 61 m
S
313.25 86 m
421.75 86 l
421.75 111 l
313.25 111 l
h
313.25 86 m
S
313.25 111 m
421.75 111 l
421.75 136 l
313.25 136 l
h
313.25 111 m
S
313.25 136 m
421.75 136 l
421.75 161 l
313.25 161 l
h
313.25 136 m
S
313.25 161 m
421.75 161 l
421.75 186 l
313.25 186 l
h
313.25 161 m
S
313.25 186 m
421.75 186 l
421.75 211 l
313.25 211 l
h
313.25 186 m
S
555 61 m
663.5 61 l
663.5 86 l
555 86 l
h
555 61 m
S
555 86 m
663.5 86 l
663.5 111 l
555 111 l
h
555 86 m
S
555 111 m
663.5 111 l
663.5 136 l
555 136 l
h
555 111 m
S
555 136 m
663.5 136 l
663.5 161 l
555 161 l
h
555 136 m
S
3 w
555 61 m
663.5 61 l
663.5 161 l
555 161 l
h
555 61 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 698.37177 178 cm
-21.76 6.2679443 m
(1#,2,3)[ 9.776000 6.224000 4.128000 9.776000 4.128000 0.000000 ] xS
1 0 0 -1 122.75 254.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
-41.470001 7.7099304 m
(40"!56$.)[ 12.220000 11.480000 7.040000 11.480000 11.860000 12.220000 5.160000 0.000000 ] xS
1 0 0 -1 366.875 254.5 cm
-34.240002 7.7099304 m
(3.76$.)[ 11.860000 11.480000 16.280000 12.220000 5.160000 0.000000 ] xS
1 0 0 -1 609.25 254.5 cm
-29.23 7.7099304 m
(1$+6$.)[ 12.220000 5.160000 12.220000 12.220000 5.160000 0.000000 ] xS
1 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
555 186 m
663.5 186 l
663.5 211 l
555 211 l
h
555 186 m
S
555 211 m
663.5 211 l
663.5 236 l
555 236 l
h
555 211 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 702.43591 88 cm
/F1.1[ 16 0 0 -16 0 0]sf
-23.544001 6.2679443 m
(+.$.".)[ 9.776000 9.184000 4.128000 9.184000 5.632000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
313 60.5 m
180 135.73288 l
S
313 161.26712 m
180 236.5 l
S
554.75 61.564102 m
421.75 61 l
S
555 160.5641 m
422 160 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 367.375 215.5 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 125.75 140.5 cm
-43.584 6.2679443 m
('''''''')[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
1 0 0 -1 125.75 115.5 cm
-43.584 6.2679443 m
(<;:98*\))[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs2 SC
0 sc
32.688 6.2679443 m
(')s
1 0 0 -1 125.75 90.5 cm
-43.728001 6.2679443 m
('''')[ 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
-0.14399999 6.2679443 m
(:)s
/Cs2 SC
0 sc
10.752 6.2679443 m
('')[ 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
32.543999 6.2679443 m
(.)s
1 0 0 -1 367.25 190.88356 cm
-43.584 6.2679443 m
(=======)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs2 SC
0 sc
32.688 6.2679443 m
(=)s
1 0 0 -1 367.5 165.5 cm
-43.584 6.2679443 m
(\)*89)[ 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
0 6.2679443 m
(<)s
/Cs2 SC
0 sc
10.896 6.2679443 m
(;<)[ 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
32.688 6.2679443 m
(;)s
/Cs2 SC
0 sc
1 0 0 -1 367.5 140.5 cm
-41.944 6.2679443 m
(\)*89:)[ 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
12.536 6.2679443 m
(>=.)[ 7.328000 10.896000 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 609.25 215.5 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 609.25 190.5 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 609.25 165.5 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 609.5 140.5 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 126.75 65.5 cm
-43.584 6.2679443 m
(''''')[ 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
10.896 6.2679443 m
(?\);)[ 10.896000 10.896000 0.000000 ] xS
/Cs1 SC
0 0 0 sc
1 0 0 -1 125.75 40.5 cm
-43.695999 6.2679443 m
(+.0+@..>)[ 11.776000 11.184000 11.184000 11.776000 11.776000 11.184000 11.184000 0.000000 ] xS
1 0 0 -1 125.75 17 cm
-44.456001 6.2679443 m
(?0=@<!;.)[ 10.896000 11.184000 10.896000 11.776000 10.896000 11.184000 10.896000 0.000000 ] xS
1 0 0 -1 366.875 116.48506 cm
-43.695999 6.2679443 m
(+.0+@..>)[ 11.776000 11.184000 11.184000 11.776000 11.776000 11.184000 11.184000 0.000000 ] xS
1 0 0 -1 368.15704 92.985062 cm
-44.456001 6.2679443 m
(?0=@<!;.)[ 10.896000 11.184000 10.896000 11.776000 10.896000 11.184000 10.896000 0.000000 ] xS
1 0 0 -1 610.21796 115.53205 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 609.71796 92.551285 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 609.71796 67.743591 cm
-43.584 6.2679443 m
(\)*89:;<=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
[] 0 d
0.60000002 i
1 0 0 -1 0 289 cm
245.94814 108.89986 m
245.8125 134.79488 l
S
0 i
CM
245.99005 188.10002 m
242.94818 180.11584 l
248.9481 180.08443 l
h
245.99005 188.10002 m
f
0 J
0 j
1 0 0 -1 0 289 cm
245.99005 100.89997 m
242.94818 108.88415 l
248.9481 108.91558 l
h
245.99005 100.89997 m
S
1 J
1 j
0.60000002 i
246 163 m
245.86134 191.10011 l
S
0 i
CM
245.82187 89.899979 m
248.86131 97.885078 l
242.86139 97.91468 l
h
245.82187 89.899979 m
f
0 J
0 j
1 0 0 -1 0 289 cm
245.82187 199.10002 m
248.86131 191.11493 l
242.86139 191.08531 l
h
245.82187 199.10002 m
S
/Cs2 SC
0 sc
1 0 0 -1 246.625 140.5 cm
-45.231998 6.2679443 m
($.3%A%!"#$%&'\()[ 4.128000 9.184000 9.488000 4.448000 9.600000 4.448000 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
477.82315 69.181915 m
477.6875 95.07692 l
S
0 i
CM
477.86505 227.81798 m
474.82318 219.8338 l
480.82309 219.80237 l
h
477.86505 227.81798 m
f
0 J
0 j
1 0 0 -1 0 289 cm
477.86505 61.182026 m
474.82318 69.166199 l
480.82309 69.197632 l
h
477.86505 61.182026 m
S
1 J
1 j
0.60000002 i
477.875 122 m
477.73636 150.10011 l
S
0 i
CM
477.69687 130.89998 m
480.7363 138.88507 l
474.73639 138.91469 l
h
477.69687 130.89998 m
f
0 J
0 j
1 0 0 -1 0 289 cm
477.69687 158.10002 m
480.7363 150.11493 l
474.73639 150.08531 l
h
477.69687 158.10002 m
S
/Cs2 SC
0 sc
1 0 0 -1 478.5 181.5 cm
-45.231998 6.2679443 m
($.3%A%!"#$%&'\()[ 4.128000 9.184000 9.488000 4.448000 9.600000 4.448000 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
315.82852 210.76712 m
182.82852 286 l
S
[] 0 d
204.1875 233.82307 m
204.1875 264.02307 l
S
0 i
CM
204.1875 16.976923 m
207.1875 24.976923 l
201.1875 24.976923 l
h
204.1875 16.976923 m
f
0 J
0 j
1 0 0 -1 0 289 cm
204.1875 272.02307 m
207.1875 264.02307 l
201.1875 264.02307 l
h
204.1875 272.02307 m
S
CM
204.1875 63.176922 m
201.1875 55.176922 l
207.1875 55.176922 l
h
204.1875 63.176922 m
f
1 0 0 -1 0 289 cm
204.1875 225.82307 m
201.1875 233.82307 l
207.1875 233.82307 l
h
204.1875 225.82307 m
S
/Cs2 SC
0 sc
1 0 0 -1 256.96954 43.512821 cm
-45.231998 6.2679443 m
($.3%A%!"#$%&\)\()[ 4.128000 9.184000 9.488000 4.448000 9.600000 4.448000 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 289 cm
554.75 235.82051 m
536.87177 235.82051 l
S
[] 0 d
544.61737 171.34782 m
543.88263 226.17781 l
S
0 i
CM
543.77545 54.822906 m
546.88239 62.781994 l
540.88293 62.862385 l
h
543.77545 54.822906 m
f
0 J
0 j
1 0 0 -1 0 289 cm
543.77545 234.17709 m
546.88239 226.218 l
540.88293 226.13762 l
h
543.77545 234.17709 m
S
CM
544.72455 125.65145 m
541.61761 117.69237 l
547.61707 117.61198 l
h
544.72455 125.65145 m
f
1 0 0 -1 0 289 cm
544.72455 163.34854 m
541.61761 171.30763 l
547.61707 171.38803 l
h
544.72455 163.34854 m
S
/Cs2 SC
0 sc
1 0 0 -1 493.25 92.551285 cm
-45.231998 6.2679443 m
($.3%A%!"#$%&*\()[ 4.128000 9.184000 9.488000 4.448000 9.600000 4.448000 9.184000 5.632000 6.224000 4.128000 4.448000 5.328000 8.896000 0.000000 ] xS
1 0 0 -1 126.25 214.71794 cm
-43.584 6.2679443 m
(''''''*')[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 125.75 190.88356 cm
-43.584 6.2679443 m
(''''''\)')[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
1 0 0 -1 126.25 165.5 cm
-43.584 6.2679443 m
(''''''\)=)[ 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 10.896000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
